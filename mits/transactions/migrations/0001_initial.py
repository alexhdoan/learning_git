# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-05 03:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        ('inventory_types', '0003_remove_license_license_count'),
        ('entities', '0001_initial'),
        ('generic_types', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CateringRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.CharField(max_length=20)),
                ('head_count', models.IntegerField(default=1)),
                ('request_date', models.DateField(verbose_name='date requested')),
                ('delivery_date', models.DateTimeField(verbose_name='delivery date and time')),
                ('status', models.CharField(choices=[('R', 'Requested'), ('O', 'Ordered'), ('D', 'Delivered')], default='R', max_length=1)),
                ('notes', models.CharField(max_length=120)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Location')),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Employee')),
            ],
            options={
                'verbose_name_plural': 'Catering Requests',
            },
        ),
        migrations.CreateModel(
            name='ConsumableRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField(verbose_name='date requested')),
                ('status', models.CharField(choices=[('R', 'Requested'), ('O', 'Ordered'), ('D', 'Deployed')], default='R', max_length=1)),
                ('notes', models.CharField(max_length=120)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Location')),
                ('requested_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='generic_types.ConsumableGeneric')),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Employee')),
            ],
            options={
                'verbose_name_plural': 'Consumable Requests',
            },
        ),
        migrations.CreateModel(
            name='EmployeeCheckOutLifespan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='date issued')),
                ('due_date', models.DateField(verbose_name='due date')),
                ('notes', models.CharField(max_length=120)),
                ('fixed_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory_types.FixedItem')),
                ('issuee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Employee')),
            ],
            options={
                'verbose_name_plural': 'Check-out (Employee, Lifespan)',
            },
        ),
        migrations.CreateModel(
            name='EmployeeIssueFixed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='date issued')),
                ('notes', models.CharField(max_length=120)),
                ('fixed_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory_types.FixedItem')),
                ('issuee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Employee')),
            ],
            options={
                'verbose_name_plural': 'Issue (Employee, Fixed)',
            },
        ),
        migrations.CreateModel(
            name='EmployeeIssueLifespan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='date issued')),
                ('notes', models.CharField(max_length=120)),
                ('issuee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Employee')),
                ('lifespan_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory_types.LifespanItem')),
            ],
            options={
                'verbose_name_plural': 'Issue (Employee, Lifespan)',
            },
        ),
        migrations.CreateModel(
            name='GroupCheckOutLifespan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='date issued')),
                ('due_date', models.DateField(verbose_name='due date')),
                ('notes', models.CharField(max_length=120)),
                ('issuee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.Group')),
                ('lifespan_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_types.LifespanItem')),
            ],
            options={
                'verbose_name_plural': 'Check-out (Group, Lifespan)',
            },
        ),
        migrations.CreateModel(
            name='GroupIssueFixed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='date issued')),
                ('notes', models.CharField(max_length=120)),
                ('fixed_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory_types.FixedItem')),
                ('issuee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Group')),
            ],
            options={
                'verbose_name_plural': 'Issue (Group, Fixed)',
            },
        ),
        migrations.CreateModel(
            name='GroupIssueLifespan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='date issued')),
                ('due_date', models.DateField(verbose_name='due date')),
                ('notes', models.CharField(max_length=120)),
                ('issuee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Group')),
                ('lifespan_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory_types.LifespanItem')),
            ],
            options={
                'verbose_name_plural': 'Issue (Group, Lifespan)',
            },
        ),
        migrations.CreateModel(
            name='LicenseIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(verbose_name='date issued')),
                ('notes', models.CharField(max_length=120)),
                ('issuee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Employee')),
                ('software', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory_types.License')),
            ],
            options={
                'verbose_name_plural': 'Software Licenses',
            },
        ),
    ]
